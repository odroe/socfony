// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-dart"
  previewFeatures = ["interactiveTransactions"]
  output   = "../lib/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Cognitive gender
enum Gender {
  woman
  man
  unknown
}

/// User model
model User {
  id               String               @id @db.Char(64)
  phone            String               @unique @db.VarChar(50)
  name             String?              @unique @db.VarChar(100)
  gender           Gender               @default(unknown)
  avatar           String?              @db.VarChar(255)
  bio              String?              @db.Text
  birthday         Int?
  registeredAt     DateTime             @default(now()) @db.Timestamptz()
  accessTokens     AccessToken[]
  publishedMoments Moment[]
  favoritedMoments UserFavoriteMoment[]

  @@index([birthday])
  @@index([registeredAt])
  @@index([gender])
}

/// User access token
model AccessToken {
  token            String   @id @db.Char(128)
  createdAt        DateTime @default(now()) @db.Timestamptz()
  expiredAt        DateTime @db.Timestamptz()
  refreshExpiredAt DateTime @db.Timestamptz()
  ownerId          String   @db.Char(64)
  owner            User     @relation(fields: [ownerId], references: [id])

  @@index([ownerId])
}

/// One-time password
model OneTimePassword {
  secret    String   @id @db.Char(64)
  phone     String   @db.VarChar(50)
  password  String   @db.VarChar(10)
  createdAt DateTime @default(now()) @db.Timestamptz()
  expiredAt DateTime @db.Timestamptz()

  @@index([phone])
}

model Moment {
  id             String               @id @db.Char(64)
  title          String?              @db.VarChar(180)
  contents       String?              @db.Text
  images         String[]             @default([])
  createdAt      DateTime             @default(now()) @db.Timestamptz()
  favoritesCount Int                  @default(0)
  commentsCount  Int                  @default(0)
  authorId       String               @db.Char(64)
  author         User                 @relation(fields: [authorId], references: [id])
  favorites      UserFavoriteMoment[]

  @@index([authorId])
  @@index([createdAt])
}

/// User favorite moment
model UserFavoriteMoment {
  userId     String   @db.Char(64)
  user       User     @relation(fields: [userId], references: [id])
  momentId   String   @db.Char(64)
  moment     Moment   @relation(fields: [momentId], references: [id])
  favoriteAt DateTime @default(now()) @db.Timestamptz()

  @@id([userId, momentId])
}
